#include <stdlib.h>

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

typedef struct ListNode listint_t;

listint_t *insert_node(listint_t **head, int number) {
    listint_t *new_node = malloc(sizeof(listint_t));
    if (!new_node) {
        return NULL;  // failed to allocate memory
    }
    
    new_node->val = number;
    new_node->next = NULL;
    
    if (*head == NULL) {
        // empty list, insert as the first node
        *head = new_node;
        return new_node;
    }
    
    listint_t *prev = NULL;
    listint_t *current = *head;
    
    while (current != NULL && current->val < number) {
        prev = current;
        current = current->next;
    }
    
    if (prev == NULL) {
        // insert as the first node
        new_node->next = *head;
        *head = new_node;
    } else {
        // insert in between prev and current
        prev->next = new_node;
        new_node->next = current;
    }
    
    return new_node;
}
